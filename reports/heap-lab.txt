Lab report for Heap Lab - dghiurco
Timestamp: 2015-04-21 16:52:26

|  :scenario |                                   :title | :result | :score |
|------------+------------------------------------------+---------+--------|
|    working |    Test student code vs instructor tests |    Fail |      4 |
| qualifying |    Test student tests vs instructor code |         |        |
|    broke-1 |         Heap add doesn't increment size. |         |        |
|    broke-2 |              Move up only moves up once. |         |        |
|    broke-3 |           Percolate down only goes left. |         |        |
|    broke-4 | Percolate down right swaps never happen. |         |        |
|    broke-5 |           Delete doesn't decrement size. |         |        |
|      total |                              Total Score |         |      4 |

Details:


** Details for Test student code vs instructor tests


FAIL "about add - it adds elements in the correct places." at (t_core.clj:22)
Actual result did not agree with the checking function.
        Actual result: nil
    Checking function: (heap-equal (Heap. 1 [2 nil]))

FAIL "about add - it adds elements in the correct places." at (t_core.clj:23)
Actual result did not agree with the checking function.
        Actual result: nil
    Checking function: (heap-equal (Heap. 2 [2 4 nil]))

FAIL "about add - it adds elements in the correct places." at (t_core.clj:24)
Actual result did not agree with the checking function.
        Actual result: nil
    Checking function: (heap-equal (Heap. 3 [2 4 6 nil]))

FAIL "about add - it adds elements in the correct places." at (t_core.clj:25)
Actual result did not agree with the checking function.
        Actual result: nil
    Checking function: (heap-equal (Heap. 4 [2 4 6 8 nil]))

FAIL "about add - it adds elements in the correct places." at (t_core.clj:26)
Actual result did not agree with the checking function.
        Actual result: nil
    Checking function: (heap-equal (Heap. 5 [2 4 6 8 10]))

FAIL "about add - it adds elements in the correct places." at (t_core.clj:27)
Actual result did not agree with the checking function.
        Actual result: nil
    Checking function: (heap-equal (Heap. 6 [2 4 6 8 10 12]))

FAIL "about add - it adds elements in the correct places." at (t_core.clj:28)
Actual result did not agree with the checking function.
        Actual result: nil
    Checking function: (heap-equal (Heap. 7 [2 4 6 8 10 12 14]))

FAIL "about add - it resizes the heap only when necessary" at (t_core.clj:31)
    Expected: 5
      Actual: 0

FAIL "about add - it resizes the heap only when necessary" at (t_core.clj:32)
    Expected: 5
      Actual: 0

FAIL "about add - it resizes the heap only when necessary" at (t_core.clj:33)
    Expected: 5
      Actual: 0

FAIL "about add - it resizes the heap only when necessary" at (t_core.clj:34)
    Expected: 5
      Actual: 0

FAIL "about add - it resizes the heap only when necessary" at (t_core.clj:35)
    Expected: 5
      Actual: 0

FAIL "about add - it resizes the heap only when necessary" at (t_core.clj:36)
    Expected: true
      Actual: false

FAIL "about add - it resizes the heap only when necessary" at (t_core.clj:37)
    Expected: true
      Actual: false

FAIL "about add - it reorders elements as needed." at (t_core.clj:48)
Actual result did not agree with the checking function.
        Actual result: nil
    Checking function: (heap-equal (Heap. 1 [14 nil]))

FAIL "about add - it reorders elements as needed." at (t_core.clj:49)
Actual result did not agree with the checking function.
        Actual result: nil
    Checking function: (heap-equal (Heap. 2 [12 14 nil]))

FAIL "about add - it reorders elements as needed." at (t_core.clj:50)
Actual result did not agree with the checking function.
        Actual result: nil
    Checking function: (heap-equal (Heap. 3 [8 14 12 nil]))

FAIL "about add - it reorders elements as needed." at (t_core.clj:51)
Actual result did not agree with the checking function.
        Actual result: nil
    Checking function: (heap-equal (Heap. 4 [2 8 12 14 nil]))

FAIL "about add - it reorders elements as needed." at (t_core.clj:52)
Actual result did not agree with the checking function.
        Actual result: nil
    Checking function: (heap-equal (Heap. 5 [2 4 12 14 8 nil]))

FAIL "about add - it reorders elements as needed." at (t_core.clj:53)
Actual result did not agree with the checking function.
        Actual result: nil
    Checking function: (heap-equal (Heap. 6 [2 4 8 14 8 12 nil]))

FAIL "about add - it reorders elements as needed." at (t_core.clj:54)
Actual result did not agree with the checking function.
        Actual result: nil
    Checking function: (heap-equal (Heap. 7 [2 4 6 14 8 12 8 nil]))

FAIL "about add - it still resizes the heap only when necessary" at (t_core.clj:57)
    Expected: 5
      Actual: 0

FAIL "about add - it still resizes the heap only when necessary" at (t_core.clj:58)
    Expected: 5
      Actual: 0

FAIL "about add - it still resizes the heap only when necessary" at (t_core.clj:59)
    Expected: 5
      Actual: 0

FAIL "about add - it still resizes the heap only when necessary" at (t_core.clj:60)
    Expected: 5
      Actual: 0

FAIL "about add - it still resizes the heap only when necessary" at (t_core.clj:61)
    Expected: 5
      Actual: 0

FAIL "about add - it still resizes the heap only when necessary" at (t_core.clj:62)
    Expected: true
      Actual: false

FAIL "about add - it still resizes the heap only when necessary" at (t_core.clj:63)
    Expected: true
      Actual: false

FAIL "about top - it returns nil if there isn't one." at (t_core.clj:71)
    Expected: nil
      Actual: 2

FAIL "about delete - It doesn't mess up empty heaps." at (t_core.clj:75)
Actual result did not agree with the checking function.
        Actual result: nil
    Checking function: (heap-equal (Heap. 0 [nil nil nil]))

FAIL "about delete - It deletes one element okay." at (t_core.clj:77)
Actual result did not agree with the checking function.
        Actual result: nil
    Checking function: (heap-equal (Heap. 0 [nil nil]))

FAIL "about delete - It deletes from two element heaps okay." at (t_core.clj:80)
Actual result did not agree with the checking function.
        Actual result: nil
    Checking function: (heap-equal (Heap. 1 [10 nil]))

FAIL "about delete - It deletes from two element heaps okay." at (t_core.clj:81)
Actual result did not agree with the checking function.
        Actual result: nil
    Checking function: (heap-equal (Heap. 1 [10 nil nil]))

FAIL "about delete - Deletes from three element heaps work." at (t_core.clj:84)
Actual result did not agree with the checking function.
        Actual result: nil
    Checking function: (heap-equal (Heap. 2 [5 10]))

FAIL "about delete - Deletes from three element heaps work." at (t_core.clj:85)
Actual result did not agree with the checking function.
        Actual result: nil
    Checking function: (heap-equal (Heap. 2 [5 10]))

FAIL "about delete - Deletes from larger heaps work." at (t_core.clj:88)
Actual result did not agree with the checking function.
        Actual result: nil
    Checking function: (heap-equal (Heap. 6 [2 6 4 12 8 10 nil]))

FAIL "about delete - Deletes from larger heaps work." at (t_core.clj:89)
Actual result did not agree with the checking function.
        Actual result: nil
    Checking function: (heap-equal (Heap. 6 [2 4 10 6 8 12 nil]))

FAIL "about delete - Deletes from larger heaps work." at (t_core.clj:90)
Actual result did not agree with the checking function.
        Actual result: nil
    Checking function: (heap-equal (Heap. 6 [2 5 4 6 8 10 nil]))

FAIL "about delete - Deletes from larger heaps work." at (t_core.clj:91)
Actual result did not agree with the checking function.
        Actual result: nil
    Checking function: (heap-equal (Heap. 6 [2 4 5 6 8 10 nil]))

FAIL "about delete - Deletes from larger heaps work." at (t_core.clj:93)
Actual result did not agree with the checking function.
        Actual result: nil
    Checking function: (heap-equal (Heap. 5 [4 6 10 12 8 nil nil]))

FAIL "about delete - Deletes from larger heaps work." at (t_core.clj:94)
Actual result did not agree with the checking function.
        Actual result: nil
    Checking function: (heap-equal (Heap. 5 [4 6 10 12 8 nil nil]))

FAIL "about delete - Deletes from larger heaps work." at (t_core.clj:95)
Actual result did not agree with the checking function.
        Actual result: nil
    Checking function: (heap-equal (Heap. 5 [4 5 10 6 8 nil nil]))

FAIL "about delete - Deletes from larger heaps work." at (t_core.clj:96)
Actual result did not agree with the checking function.
        Actual result: nil
    Checking function: (heap-equal (Heap. 5 [4 6 5 10 8 nil nil]))
FAILURE: 43 checks failed.  (But 5 succeeded.)
Subprocess failed


** Details for Test student tests vs instructor code

Exception in thread "main" java.lang.ClassNotFoundException: heal-lab.core.Heap
	at java.net.URLClassLoader$1.run(URLClassLoader.java:366)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:355)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:354)
	at clojure.lang.DynamicClassLoader.findClass(DynamicClassLoader.java:61)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:425)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:191)
	at heap_lab.t_core$eval8046$loading__4910__auto____8047.invoke(t_core.clj:1)
	at heap_lab.t_core$eval8046.invoke(t_core.clj:1)
	at clojure.lang.Compiler.eval(Compiler.java:6619)
	at clojure.lang.Compiler.eval(Compiler.java:6608)
	at clojure.lang.Compiler.load(Compiler.java:7064)
	at clojure.lang.RT.loadResourceScript(RT.java:370)
	at clojure.lang.RT.loadResourceScript(RT.java:361)
	at clojure.lang.RT.load(RT.java:440)
	at clojure.lang.RT.load(RT.java:411)
	at clojure.core$load$fn__5018.invoke(core.clj:5530)
	at clojure.core$load.doInvoke(core.clj:5529)
	at clojure.lang.RestFn.invoke(RestFn.java:408)
	at clojure.core$load_one.invoke(core.clj:5336)
	at clojure.core$load_lib$fn__4967.invoke(core.clj:5375)
	at clojure.core$load_lib.doInvoke(core.clj:5374)
	at clojure.lang.RestFn.applyTo(RestFn.java:142)
	at clojure.core$apply.invoke(core.clj:619)
	at clojure.core$load_libs.doInvoke(core.clj:5413)
	at clojure.lang.RestFn.applyTo(RestFn.java:137)
	at clojure.core$apply.invoke(core.clj:619)
	at clojure.core$require.doInvoke(core.clj:5496)
	at clojure.lang.RestFn.invoke(RestFn.java:421)
	at midje.repl$load_facts$fn__7979.invoke(repl.clj:206)
	at midje.repl$load_facts.doInvoke(repl.clj:192)
	at clojure.lang.RestFn.invoke(RestFn.java:397)
	at user$eval8042.invoke(form-init934894424821760014.clj:1)
	at clojure.lang.Compiler.eval(Compiler.java:6619)
	at clojure.lang.Compiler.eval(Compiler.java:6609)
	at clojure.lang.Compiler.load(Compiler.java:7064)
	at clojure.lang.Compiler.loadFile(Compiler.java:7020)
	at clojure.main$load_script.invoke(main.clj:294)
	at clojure.main$init_opt.invoke(main.clj:299)
	at clojure.main$initialize.invoke(main.clj:327)
	at clojure.main$null_opt.invoke(main.clj:362)
	at clojure.main$main.doInvoke(main.clj:440)
	at clojure.lang.RestFn.invoke(RestFn.java:421)
	at clojure.lang.Var.invoke(Var.java:419)
	at clojure.lang.AFn.applyToHelper(AFn.java:163)
	at clojure.lang.Var.applyTo(Var.java:532)
	at clojure.main.main(main.java:37)
Subprocess failed


** Details for Heap add doesn't increment size.

Exception in thread "main" java.lang.ClassNotFoundException: heal-lab.core.Heap
	at java.net.URLClassLoader$1.run(URLClassLoader.java:366)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:355)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:354)
	at clojure.lang.DynamicClassLoader.findClass(DynamicClassLoader.java:61)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:425)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:191)
	at heap_lab.t_core$eval8046$loading__4910__auto____8047.invoke(t_core.clj:1)
	at heap_lab.t_core$eval8046.invoke(t_core.clj:1)
	at clojure.lang.Compiler.eval(Compiler.java:6619)
	at clojure.lang.Compiler.eval(Compiler.java:6608)
	at clojure.lang.Compiler.load(Compiler.java:7064)
	at clojure.lang.RT.loadResourceScript(RT.java:370)
	at clojure.lang.RT.loadResourceScript(RT.java:361)
	at clojure.lang.RT.load(RT.java:440)
	at clojure.lang.RT.load(RT.java:411)
	at clojure.core$load$fn__5018.invoke(core.clj:5530)
	at clojure.core$load.doInvoke(core.clj:5529)
	at clojure.lang.RestFn.invoke(RestFn.java:408)
	at clojure.core$load_one.invoke(core.clj:5336)
	at clojure.core$load_lib$fn__4967.invoke(core.clj:5375)
	at clojure.core$load_lib.doInvoke(core.clj:5374)
	at clojure.lang.RestFn.applyTo(RestFn.java:142)
	at clojure.core$apply.invoke(core.clj:619)
	at clojure.core$load_libs.doInvoke(core.clj:5413)
	at clojure.lang.RestFn.applyTo(RestFn.java:137)
	at clojure.core$apply.invoke(core.clj:619)
	at clojure.core$require.doInvoke(core.clj:5496)
	at clojure.lang.RestFn.invoke(RestFn.java:421)
	at midje.repl$load_facts$fn__7979.invoke(repl.clj:206)
	at midje.repl$load_facts.doInvoke(repl.clj:192)
	at clojure.lang.RestFn.invoke(RestFn.java:397)
	at user$eval8042.invoke(form-init2998320110859373788.clj:1)
	at clojure.lang.Compiler.eval(Compiler.java:6619)
	at clojure.lang.Compiler.eval(Compiler.java:6609)
	at clojure.lang.Compiler.load(Compiler.java:7064)
	at clojure.lang.Compiler.loadFile(Compiler.java:7020)
	at clojure.main$load_script.invoke(main.clj:294)
	at clojure.main$init_opt.invoke(main.clj:299)
	at clojure.main$initialize.invoke(main.clj:327)
	at clojure.main$null_opt.invoke(main.clj:362)
	at clojure.main$main.doInvoke(main.clj:440)
	at clojure.lang.RestFn.invoke(RestFn.java:421)
	at clojure.lang.Var.invoke(Var.java:419)
	at clojure.lang.AFn.applyToHelper(AFn.java:163)
	at clojure.lang.Var.applyTo(Var.java:532)
	at clojure.main.main(main.java:37)
Subprocess failed


** Details for Move up only moves up once.

Exception in thread "main" java.lang.ClassNotFoundException: heal-lab.core.Heap
	at java.net.URLClassLoader$1.run(URLClassLoader.java:366)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:355)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:354)
	at clojure.lang.DynamicClassLoader.findClass(DynamicClassLoader.java:61)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:425)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:191)
	at heap_lab.t_core$eval8046$loading__4910__auto____8047.invoke(t_core.clj:1)
	at heap_lab.t_core$eval8046.invoke(t_core.clj:1)
	at clojure.lang.Compiler.eval(Compiler.java:6619)
	at clojure.lang.Compiler.eval(Compiler.java:6608)
	at clojure.lang.Compiler.load(Compiler.java:7064)
	at clojure.lang.RT.loadResourceScript(RT.java:370)
	at clojure.lang.RT.loadResourceScript(RT.java:361)
	at clojure.lang.RT.load(RT.java:440)
	at clojure.lang.RT.load(RT.java:411)
	at clojure.core$load$fn__5018.invoke(core.clj:5530)
	at clojure.core$load.doInvoke(core.clj:5529)
	at clojure.lang.RestFn.invoke(RestFn.java:408)
	at clojure.core$load_one.invoke(core.clj:5336)
	at clojure.core$load_lib$fn__4967.invoke(core.clj:5375)
	at clojure.core$load_lib.doInvoke(core.clj:5374)
	at clojure.lang.RestFn.applyTo(RestFn.java:142)
	at clojure.core$apply.invoke(core.clj:619)
	at clojure.core$load_libs.doInvoke(core.clj:5413)
	at clojure.lang.RestFn.applyTo(RestFn.java:137)
	at clojure.core$apply.invoke(core.clj:619)
	at clojure.core$require.doInvoke(core.clj:5496)
	at clojure.lang.RestFn.invoke(RestFn.java:421)
	at midje.repl$load_facts$fn__7979.invoke(repl.clj:206)
	at midje.repl$load_facts.doInvoke(repl.clj:192)
	at clojure.lang.RestFn.invoke(RestFn.java:397)
	at user$eval8042.invoke(form-init7323884536573845251.clj:1)
	at clojure.lang.Compiler.eval(Compiler.java:6619)
	at clojure.lang.Compiler.eval(Compiler.java:6609)
	at clojure.lang.Compiler.load(Compiler.java:7064)
	at clojure.lang.Compiler.loadFile(Compiler.java:7020)
	at clojure.main$load_script.invoke(main.clj:294)
	at clojure.main$init_opt.invoke(main.clj:299)
	at clojure.main$initialize.invoke(main.clj:327)
	at clojure.main$null_opt.invoke(main.clj:362)
	at clojure.main$main.doInvoke(main.clj:440)
	at clojure.lang.RestFn.invoke(RestFn.java:421)
	at clojure.lang.Var.invoke(Var.java:419)
	at clojure.lang.AFn.applyToHelper(AFn.java:163)
	at clojure.lang.Var.applyTo(Var.java:532)
	at clojure.main.main(main.java:37)
Subprocess failed


** Details for Percolate down only goes left.

Exception in thread "main" java.lang.ClassNotFoundException: heal-lab.core.Heap
	at java.net.URLClassLoader$1.run(URLClassLoader.java:366)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:355)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:354)
	at clojure.lang.DynamicClassLoader.findClass(DynamicClassLoader.java:61)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:425)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:191)
	at heap_lab.t_core$eval8046$loading__4910__auto____8047.invoke(t_core.clj:1)
	at heap_lab.t_core$eval8046.invoke(t_core.clj:1)
	at clojure.lang.Compiler.eval(Compiler.java:6619)
	at clojure.lang.Compiler.eval(Compiler.java:6608)
	at clojure.lang.Compiler.load(Compiler.java:7064)
	at clojure.lang.RT.loadResourceScript(RT.java:370)
	at clojure.lang.RT.loadResourceScript(RT.java:361)
	at clojure.lang.RT.load(RT.java:440)
	at clojure.lang.RT.load(RT.java:411)
	at clojure.core$load$fn__5018.invoke(core.clj:5530)
	at clojure.core$load.doInvoke(core.clj:5529)
	at clojure.lang.RestFn.invoke(RestFn.java:408)
	at clojure.core$load_one.invoke(core.clj:5336)
	at clojure.core$load_lib$fn__4967.invoke(core.clj:5375)
	at clojure.core$load_lib.doInvoke(core.clj:5374)
	at clojure.lang.RestFn.applyTo(RestFn.java:142)
	at clojure.core$apply.invoke(core.clj:619)
	at clojure.core$load_libs.doInvoke(core.clj:5413)
	at clojure.lang.RestFn.applyTo(RestFn.java:137)
	at clojure.core$apply.invoke(core.clj:619)
	at clojure.core$require.doInvoke(core.clj:5496)
	at clojure.lang.RestFn.invoke(RestFn.java:421)
	at midje.repl$load_facts$fn__7979.invoke(repl.clj:206)
	at midje.repl$load_facts.doInvoke(repl.clj:192)
	at clojure.lang.RestFn.invoke(RestFn.java:397)
	at user$eval8042.invoke(form-init4138573471603429312.clj:1)
	at clojure.lang.Compiler.eval(Compiler.java:6619)
	at clojure.lang.Compiler.eval(Compiler.java:6609)
	at clojure.lang.Compiler.load(Compiler.java:7064)
	at clojure.lang.Compiler.loadFile(Compiler.java:7020)
	at clojure.main$load_script.invoke(main.clj:294)
	at clojure.main$init_opt.invoke(main.clj:299)
	at clojure.main$initialize.invoke(main.clj:327)
	at clojure.main$null_opt.invoke(main.clj:362)
	at clojure.main$main.doInvoke(main.clj:440)
	at clojure.lang.RestFn.invoke(RestFn.java:421)
	at clojure.lang.Var.invoke(Var.java:419)
	at clojure.lang.AFn.applyToHelper(AFn.java:163)
	at clojure.lang.Var.applyTo(Var.java:532)
	at clojure.main.main(main.java:37)
Subprocess failed


** Details for Percolate down right swaps never happen.

Exception in thread "main" java.lang.ClassNotFoundException: heal-lab.core.Heap
	at java.net.URLClassLoader$1.run(URLClassLoader.java:366)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:355)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:354)
	at clojure.lang.DynamicClassLoader.findClass(DynamicClassLoader.java:61)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:425)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:191)
	at heap_lab.t_core$eval8046$loading__4910__auto____8047.invoke(t_core.clj:1)
	at heap_lab.t_core$eval8046.invoke(t_core.clj:1)
	at clojure.lang.Compiler.eval(Compiler.java:6619)
	at clojure.lang.Compiler.eval(Compiler.java:6608)
	at clojure.lang.Compiler.load(Compiler.java:7064)
	at clojure.lang.RT.loadResourceScript(RT.java:370)
	at clojure.lang.RT.loadResourceScript(RT.java:361)
	at clojure.lang.RT.load(RT.java:440)
	at clojure.lang.RT.load(RT.java:411)
	at clojure.core$load$fn__5018.invoke(core.clj:5530)
	at clojure.core$load.doInvoke(core.clj:5529)
	at clojure.lang.RestFn.invoke(RestFn.java:408)
	at clojure.core$load_one.invoke(core.clj:5336)
	at clojure.core$load_lib$fn__4967.invoke(core.clj:5375)
	at clojure.core$load_lib.doInvoke(core.clj:5374)
	at clojure.lang.RestFn.applyTo(RestFn.java:142)
	at clojure.core$apply.invoke(core.clj:619)
	at clojure.core$load_libs.doInvoke(core.clj:5413)
	at clojure.lang.RestFn.applyTo(RestFn.java:137)
	at clojure.core$apply.invoke(core.clj:619)
	at clojure.core$require.doInvoke(core.clj:5496)
	at clojure.lang.RestFn.invoke(RestFn.java:421)
	at midje.repl$load_facts$fn__7979.invoke(repl.clj:206)
	at midje.repl$load_facts.doInvoke(repl.clj:192)
	at clojure.lang.RestFn.invoke(RestFn.java:397)
	at user$eval8042.invoke(form-init1453683943802464656.clj:1)
	at clojure.lang.Compiler.eval(Compiler.java:6619)
	at clojure.lang.Compiler.eval(Compiler.java:6609)
	at clojure.lang.Compiler.load(Compiler.java:7064)
	at clojure.lang.Compiler.loadFile(Compiler.java:7020)
	at clojure.main$load_script.invoke(main.clj:294)
	at clojure.main$init_opt.invoke(main.clj:299)
	at clojure.main$initialize.invoke(main.clj:327)
	at clojure.main$null_opt.invoke(main.clj:362)
	at clojure.main$main.doInvoke(main.clj:440)
	at clojure.lang.RestFn.invoke(RestFn.java:421)
	at clojure.lang.Var.invoke(Var.java:419)
	at clojure.lang.AFn.applyToHelper(AFn.java:163)
	at clojure.lang.Var.applyTo(Var.java:532)
	at clojure.main.main(main.java:37)
Subprocess failed


** Details for Delete doesn't decrement size.

Exception in thread "main" java.lang.ClassNotFoundException: heal-lab.core.Heap
	at java.net.URLClassLoader$1.run(URLClassLoader.java:366)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:355)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:354)
	at clojure.lang.DynamicClassLoader.findClass(DynamicClassLoader.java:61)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:425)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:191)
	at heap_lab.t_core$eval8046$loading__4910__auto____8047.invoke(t_core.clj:1)
	at heap_lab.t_core$eval8046.invoke(t_core.clj:1)
	at clojure.lang.Compiler.eval(Compiler.java:6619)
	at clojure.lang.Compiler.eval(Compiler.java:6608)
	at clojure.lang.Compiler.load(Compiler.java:7064)
	at clojure.lang.RT.loadResourceScript(RT.java:370)
	at clojure.lang.RT.loadResourceScript(RT.java:361)
	at clojure.lang.RT.load(RT.java:440)
	at clojure.lang.RT.load(RT.java:411)
	at clojure.core$load$fn__5018.invoke(core.clj:5530)
	at clojure.core$load.doInvoke(core.clj:5529)
	at clojure.lang.RestFn.invoke(RestFn.java:408)
	at clojure.core$load_one.invoke(core.clj:5336)
	at clojure.core$load_lib$fn__4967.invoke(core.clj:5375)
	at clojure.core$load_lib.doInvoke(core.clj:5374)
	at clojure.lang.RestFn.applyTo(RestFn.java:142)
	at clojure.core$apply.invoke(core.clj:619)
	at clojure.core$load_libs.doInvoke(core.clj:5413)
	at clojure.lang.RestFn.applyTo(RestFn.java:137)
	at clojure.core$apply.invoke(core.clj:619)
	at clojure.core$require.doInvoke(core.clj:5496)
	at clojure.lang.RestFn.invoke(RestFn.java:421)
	at midje.repl$load_facts$fn__7979.invoke(repl.clj:206)
	at midje.repl$load_facts.doInvoke(repl.clj:192)
	at clojure.lang.RestFn.invoke(RestFn.java:397)
	at user$eval8042.invoke(form-init6059970811267855624.clj:1)
	at clojure.lang.Compiler.eval(Compiler.java:6619)
	at clojure.lang.Compiler.eval(Compiler.java:6609)
	at clojure.lang.Compiler.load(Compiler.java:7064)
	at clojure.lang.Compiler.loadFile(Compiler.java:7020)
	at clojure.main$load_script.invoke(main.clj:294)
	at clojure.main$init_opt.invoke(main.clj:299)
	at clojure.main$initialize.invoke(main.clj:327)
	at clojure.main$null_opt.invoke(main.clj:362)
	at clojure.main$main.doInvoke(main.clj:440)
	at clojure.lang.RestFn.invoke(RestFn.java:421)
	at clojure.lang.Var.invoke(Var.java:419)
	at clojure.lang.AFn.applyToHelper(AFn.java:163)
	at clojure.lang.Var.applyTo(Var.java:532)
	at clojure.main.main(main.java:37)
Subprocess failed
